<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.jcabi</groupId>
		<artifactId>parent</artifactId>
		<version>0.66.0</version>
	</parent>
	<groupId>com.integralblue</groupId>
	<artifactId>hibernate-springcache</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<name>Hibernate/Spring Cache Integration</name>
	<description>Integration for org.springframework.cache.Cache into Hibernate as a second-level caching service</description>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
			<comments>See discussion at http://hibernate.org/license for more details.</comments>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<url>https://github.com/candrews/hibernate-springcache</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/candrews/hibernate-springcache/issues</url>
	</issueManagement>
	<ciManagement>
		<system>travis</system>
		<url>https://travis-ci.org/candrews/hibernate-springcache</url>
	</ciManagement>
	<scm>
		<url>https://github.com/candrews/hibernate-springcache</url>
		<connection>scm:git:https://github.com/candrews/hibernate-springcache.git</connection>
		<developerConnection>scm:git:git@github.com:candrews/hibernate-springcache.git</developerConnection>
	</scm>
	<developers>
		<developer>
			<name>Craig Andrews</name>
			<email>candrews@integralblue.com</email>
			<id>candrews</id>
			<url>https://candrews.integralblue.com</url>
			<timezone>-5</timezone>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jcache</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-testing</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>3.2.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<version>1.23</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java18</artifactId>
						<version>1.0</version>
					</signature>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.21.2</version>
				<configuration>
					<verbose>true</verbose>
					<failOnViolation>true</failOnViolation>
					<targetJdk>${maven.compiler.target}</targetJdk>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<rulesets>
						<ruleset>${basedir}/.pmdruleset.xml</ruleset>
					</rulesets>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<!-- build will fail if pmd reports an error -->
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>validate-fatal</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>shared/config/checkstyle/checkstyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-non-fatal</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>shared/config/checkstyle/checkstyle-non-fatal.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>false</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											buildnumber-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>
												create-timestamp
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
